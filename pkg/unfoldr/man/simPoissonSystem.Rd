% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/spheroid.R
\name{simPoissonSystem}
\alias{simPoissonSystem}
\title{Simulation of a Poisson germ-grain process}
\usage{
simPoissonSystem(theta, lam, size = "const", shape = "const",
  orientation = "rbetaiso", type = c("prolate", "oblate", "spheres",
  "cylinders"), rjoint = NULL, box = list(c(0, 1)), mu = c(0, 0, 1),
  dz = 0, n = c(0, 1, 0), intersect = c("full", "only", "original"),
  intern = FALSE, perfect = FALSE, pl = 0, label = "N")
}
\arguments{
\item{theta}{list of simulation parameters which must consist of elements: \code{size}, \code{shape} and \code{orientation}}

\item{lam}{mean number of grains per unit volume}

\item{size}{name of size distribution function}

\item{shape}{name of shape distribution function}

\item{orientation}{name of direction distribution function}

\item{type}{spheroid type, either "\code{prolate}" or "\code{oblate}"}

\item{rjoint}{name of joint distribution function given by the user}

\item{box}{simulation box}

\item{mu}{main orientation axis, \code{mu=c(0,0,1)} (default), as the alignment of the coordinate system}

\item{dz}{distance of the intersecting x-, y-plane to the origin}

\item{n}{normal vector of intersting plane}

\item{intersect}{use "\code{full}" to return the simulated system together with section profiles as two lists, choose "\code{only}" for section
profiles only and "\code{original}" for the 3D system only}

\item{intern}{logical, \code{intern=FALSE} (default), whether to return only section profiles with centers inside the simulation window}

\item{perfect}{logical, \code{perfect=TRUE} (default) simulate perfect}

\item{pl}{integer, print level and return value type, see details}

\item{label}{character, label set to each generated grain, ´\code{N}´ (default)}
}
\value{
list of grains either of class "\code{prolate}" or "\code{oblate}", "\code{sphere}" or "\code{cylinder}" or a list of length two if
				   \code{intersect="full"} where the first element stores the 3D generated objects as a list and the second the corresponding section profiles
				   either in a short verion (if \code{pl=10}) or in a long version otherwise
}
\description{
Simulation of a Poisson germ-grain process with either spheres, spheroids or spherocylinders as grains
}
\details{
The function simulates a Poisson germ-grain process given the simulation parameters in the argument \code{theta}
and a predefined bounding box where the positions of the germs are generated independently according to a Poisson process with mean
intensity parameter \code{lam}. The function either generates \code{type="prolate"} or \code{type="oblate"} spheroids, spheres or spherocylinders.
The argument \code{size} is a name of the distribution function of the size of the grains, i.e. the semi-major axis lengths in case of spheroids,
radii for spheres or the lengths of the main axis of cylinders.

The following directional orientation distributions of the spheroid's major-axis or cylinder's main axis are available:
a uniform distribution (\code{runifdir}), isotropic random planar distribution (\code{rbetaiso}, see the reference below)
and a "von Mises-Fisher" (\code{rvMisesFisher}) distribution. The simulation box is a list containing the ranges of each box dimension
corresponding to the lower and upper limits in each direction. If the argument \code{box} contains only a single range, i.e. \code{list(c(0,1)}, the
same limits are assumed for the remaining dimensions. The argument \code{rjoint} names a joint distribution function which can be any function
provided by the user in order to generate the required random parameters for spheroids or cylinders, see below.

In addition, the function supports an exact simulation [2] of the grains. In case of spheroids and cylinders setting \code{size="rbinorm"}
declares a bivariate normal size-shape distribution for which the exact simulation is available as an option if \code{perfect=TRUE}. More specifically,
for a bivariate normal vector \eqn{[X,Y]} with correlation parameter \eqn{\rho}, the length of the semi-major axis of a spheroid is given by \eqn{a=exp(x)}
with a (logit-transformed) shape parameter as \eqn{s=1/(1+exp(-y))} and thus a scaled semi-minor axis length \eqn{c=a*s}. This modification leads to a lognormally
distributed length of the semi-major axis. In case of cylinders, the lognormally distributed length of a cylinder is \eqn{len=h+2*r} where
\code{h} is the height and \eqn{r=len/2*s} the radius. The direction \code{u} of the a spheroid or cylinder is determined by the
major axis independent of the size and shape. Also, the following univariate distributions of the lengths \code{a} and \code{len}, the shapes \code{s} are
available: `\code{rbeta}`, `\code{rgamma}`, `\code{rlnorm}` and `\code{runif}`. Use `\code{const}` for a simulation with a constant length or shape.
Only simulations by "\code{rbinorm}" can use the exact simulation if \code{perfect=TRUE}.

For spheres any distribution of the radii can be specified as a name of a user-defined function in \code{size} as long as the formal named
function parameters match the actual named parameters exactly as defined in the parameters given by \code{theta}.
Besides this, all other distributions given above are also available. In particular, setting \code{size="rlnorm"} leads to lognormally distributed
radii of the spheres in which case the exact simulation is available as an option (\code{perfect=TRUE}). Use "\code{const}" for a constant
radius of simulated spheres. 
 
The argument \code{pl>=0} denotes both the print level of intermediate information and type of return value after simulations. 
If \code{pl=10} then shorter lists of spheroids, spheres or cylinders are returned to speed up computation. Note that, the current
implementation does not include routines for unfolding the joint 3D size-shape-orientation
distribution of cylinders so far.
}
\examples{
\dontrun{
	
# directional distribution
rbetaiso <- function(kappa) {
   phi <- runif(1,0,1)*2*pi
   q <- runif(1,0,1)
   theta=acos((1-2*q)/sqrt(kappa*kappa-(1-2*q)*(1-2*q)*(kappa*kappa-1)))
   list("u"=c(sin(theta)*cos(phi),sin(theta)*sin(phi),cos(theta)),
		   "theta"=theta,"phi"=phi)					
}

# no perfect simualtion here for 'rmulti'
# multivariate size distribution and orientation distribution 
rmulti <- function(m,s,kappa) {	
   dir <- rbetaiso(kappa)
   M <- chol(s, pivot = TRUE)
   M <- M[, order(attr(M, "pivot"))]
   x <- exp(matrix(m,nrow=1) +
          matrix(rnorm(ncol(s)), nrow = 1, byrow = TRUE) \%*\%M)
   a <- min(x)
   b <- max(x)
   
   list("a"=a,"b"=b, "c"=a, "u"=dir$u,"theta"=dir$theta, "phi"=dir$phi)

}

set.seed(1234)
lam <- 100
box <- list("xrange"=c(0,5),"yrange"=c(0,5),"zrange"=c(0,5))

# joint (user defined random generating function) simualtion
sigma <- matrix(c(0.1,0.1,0.1,0.25), ncol=2)
theta <- list("m"=c(-3.0,-2.0),"s"=sigma,"kappa"=0.5)
S <- simSpheroidSystem(theta,lam,rjoint="rmulti",box=box,pl=101)

# Spheroids with log normal distributed semi-major axis length
# distribution and independent orientation distribution
theta <- list("size"=list("meanlog"=-2.5,"sdlog"=0.5),
              "shape"=list("s"=0.5),
              "orientation"=list("kappa"=1.5))
  
S <- simSpheroidSystem(theta,lam,size="rlnorm",shape="const",orientation="rbetaiso",
		box=box,pl=101)
			   
# log normal, rbeta shape
theta <- list("size"=list("meanlog"=-2.5,"sdlog"=0.5),
			  "shape"=list("a"=1,"b"=2),
		      "orientation"=list("kappa"=1.5))

S <- simSpheroidSystem(theta,lam,size="rlnorm",shape="rbeta",orientation="rbetaiso",
		box=box,pl=101)

# Spheroids of constant sizes, const shape
theta <- list("size"=list(0.25),
              "shape"=list("s"=0.5),
              "orientation"=list("kappa"=1))
S <- simSpheroidSystem(theta,lam,size="const",shape="const",orientation="rbetaiso",
                       box=box,pl=101)

# constant size, rbeta shape			   
theta <- list("size"=list(0.25),
			  "shape"=list("a"=1,"b"=2),
			  "orientation"=list("kappa"=1.5))	  
			   
S <- simSpheroidSystem(theta,lam,size="const",shape="rbeta",orientation="rbetaiso",
					   box=box,pl=101)			   
			   
			   
# Spheroids exact simulation
param <- list("mx"=-1.0,"my"=-2.5, "sdx"=0.15,"sdy"=0.2,"rho"=0.0,"kappa"=1.0)
theta <- list("size"=list("mx"=param$mx,
					      "sdx"=param$sdx,
						  "my"=param$my,
						  "sdy"=param$sdy,
						  "rho"=param$rho),
			  "orientation"=list("kappa"=param$kappa),
			  "shape"=list())

S <- simSpheroidSystem(theta,lam,size="rbinorm",orientation="rbetaiso",box=box,pl=101)	


## show spheroid system 
#cols <- c("#0000FF","#00FF00","#FF0000","#FF00FF","#FFFF00","#00FFFF")
#spheroids3d(S[1:500],box=box, col=cols)

}

}
\references{
\itemize{
	\item{} {Ohser, J. and Schladitz, K. 3D images of materials structures Wiley-VCH, 2009}
     \item{} {C. Lantu\eqn{\acute{\textrm{e}}}joul. Geostatistical simulation. Models and algorithms.
					Springer, Berlin, 2002. Zbl 0990.86007}
	  }
}
\author{
M. Baaske
}
